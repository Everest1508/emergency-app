name: Deploy to EC2

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH key and permissions
      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_KEY_PAIR }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      # Step 3: SSH into EC2 and deploy the code
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Exit on any error

            cd /home/ubuntu/emergency-app

            # Fetch latest code
            git pull origin main
            
            # Stop and remove only the existing containers (keeps volumes & networks intact)
            sudo docker compose down --remove-orphans

            # Remove old/unused Docker images
            sudo docker image prune -f

            # Build and start the services without unnecessary rebuilds
            sudo docker compose up -d --build --remove-orphans

            # Run Django migrations
            sudo docker exec django_app python manage.py makemigrations
            sudo docker exec django_app python manage.py migrate
            
            # Cleanup old containers (if any)
            sudo docker container prune -f

          EOF
